# -*- coding: utf-8 -*-
"""deploy_tflite.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yXKNlhm6-h6H1YtgYt67d-WYAZlANeAl
"""

# ! pip3 install https://dl.google.com/coral/python/tflite_runtime-2.1.0.post1-cp37-cp37m-linux_armv7l.whl

import numpy as np
import tensorflow as tf
import cv2
import tflite_runtime.interpreter as tflite

# clss = {'0': 'safe driving',
# '1': 'texting - right',
# '2': 'talking on the phone - right',
# '3': 'texting - left',
# '4': 'talking on the phone - left',
# '5':'operating the radio',
# '6': 'drinking',
# '7': 'reaching behind',
# '8': 'hair and makeup',
# '9': 'talking to passenger'}

def load_model(model_path):
    interpreter = tf.lite.Interpreter(model_content=model_path)
    interpreter.allocate_tensors()
    input_details = interpreter.get_input_details()
    output_details = interpreter.get_output_details()
    return iterpreter

def get_inference(model, file_path):
    clss = {'0': 'safe driving',
    '1': 'texting - right',
    '2': 'talking on the phone - right',
    '3': 'texting - left',
    '4': 'talking on the phone - left',
    '5':'operating the radio',
    '6': 'drinking',
    '7': 'reaching behind',
    '8': 'hair and makeup',
    '9': 'talking to passenger'}
    input_path = file_path
    input_data = cv2.imread(input_path,0)
    input_data = cv2.resize(input_data, (256, 256))
    # input_data = cv2.cv2Color(input_data, cv2.COLORBGR2RGB)
    input_data = (input_data / 255).astype(np.float32)
    input_data = tf.expand_dims(input_data, -1)
    input_data = tf.expand_dims(input_data, 0)
    print(input_data.shape)
    interpreter.set_tensor(input_details[0]['index'], input_data)
    interpreter.invoke()
    tflite_results = interpreter.get_tensor(output_details[0]['index'])
    cpred = np.argmax(tflite_results, axis=1)
    print(cpred)
    print(clss[str(cpred[0])])

    return clss