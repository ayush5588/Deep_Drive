# -*- coding: utf-8 -*-
"""data_cleaning_iot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wUSTjQKOFXGeGWxo74LG1uHG8JcUQ4va
"""

import pandas as pd
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

"""# Merging the stupid csvs"""

! unzip '/content/drive/My Drive/Parallax/data.zip'

accl_lin = pd.read_csv('/content/data/16/aceleracaoLinear_terra.csv')
accl_ter = pd.read_csv('/content/data/16/acelerometro_terra.csv')
camp_mag = pd.read_csv('/content/data/16/campoMagnetico_terra.csv')
giro_ter = pd.read_csv('/content/data/16/giroscopio_terra.csv')
truth = pd.read_csv('/content/data/16/groundTruth.csv')

accl_lin.head()

accl_ter.head()

camp_mag.head()

giro_ter.head()

def rename_df(df, from_columns, to_columns):
    rename_dict = {}
    for f_c, to_c in zip(from_columns, to_columns):
        rename_dict[f_c] = to_c 

    df.rename(rename_dict, axis=1, inplace=True)
    return df

accl_lin = rename_df(accl_lin, ['timestamp', 'uptimeNanos', 'x', 'y', 'z'], ['timestamp', 'uptimeNanos', 'x_accl', 'y_accl', 'z_accl'])

accl_ter = rename_df(accl_ter, ['timestamp', 'uptimeNanos', 'x', 'y', 'z'], ['timestamp', 'uptimeNanos', 'x_acct', 'y_acct', 'z_acct'])

camp_mag = rename_df(camp_mag, ['timestamp', 'uptimeNanos', 'x', 'y', 'z'], ['timestamp', 'uptimeNanos', 'x_camp', 'y_camp', 'z_camp'])

giro_ter = rename_df(giro_ter, ['timestamp', 'uptimeNanos', 'x', 'y', 'z'], ['timestamp', 'uptimeNanos', 'x_giro', 'y_giro', 'z_giro'])

accl_lin.head()

accl_ter.head()

camp_mag.head()

giro_ter.head()

print(giro_ter.shape)
print(camp_mag.shape)
print(accl_ter.shape)
print(accl_lin.shape)

camp_mag.tail(2)

giro_ter.tail(2)

truth.head()

print(giro_ter['uptimeNanos'][0])

# print(giro_ter['uptimeNanos'])

def del_val(df):
    val = df['uptimeNanos'][0]
    for i in range(len(df)):
        df['uptimeNanos'][i] = round((df['uptimeNanos'][i] - val) / 10**9, 2)
    return df

accl_lin = del_val(accl_lin)

giro_ter = del_val(giro_ter)

camp_mag = del_val(camp_mag)

accl_ter = del_val(accl_ter)

accl_lin.head(10000)

truth.head(10)

# df_train = giro_ter['']

camp_mag.to_csv('camp_mag16.csv')
accl_lin.to_csv('accl_lin16.csv')
giro_ter.to_csv('giro_ter16.csv')
accl_ter.to_csv('accl_ter16.csv')

